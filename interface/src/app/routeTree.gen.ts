/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/root'
import { Route as authLayoutImport } from './routes/(auth)/layout'
import { Route as appLayoutImport } from './routes/(app)/layout'
import { Route as authSignUpIndexImport } from './routes/(auth)/sign-up/index'
import { Route as authSignInIndexImport } from './routes/(auth)/sign-in/index'
import { Route as appTrackerIndexImport } from './routes/(app)/tracker/index'
import { Route as appIndexImport } from './routes/(app)/index'
import { Route as appSettingsLayoutImport } from './routes/(app)/settings/layout'
import { Route as appProjectsProjectUuidIndexImport } from './routes/(app)/projects/$projectUuid/index'
import { Route as appSettingsIndexImport } from './routes/(app)/settings/index'
import { Route as appProjectsIndexImport } from './routes/(app)/projects/index'

// Create Virtual Routes

const AppLayoutProjectsImport = createFileRoute('/_app-layout/projects')()

// Create/Update Routes

const authLayoutRoute = authLayoutImport.update({
  id: '/_auth-layout',
  getParentRoute: () => rootRoute,
} as any)

const appLayoutRoute = appLayoutImport.update({
  id: '/_app-layout',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpIndexRoute = authSignUpIndexImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authLayoutRoute,
} as any)

const authSignInIndexRoute = authSignInIndexImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authLayoutRoute,
} as any)

const appTrackerIndexRoute = appTrackerIndexImport.update({
  id: '/tracker',
  path: '/tracker',
  getParentRoute: () => appLayoutRoute,
} as any)

const appIndexRoute = appIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appSettingsLayoutRoute = appSettingsLayoutImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => appLayoutRoute,
} as any)

const AppLayoutProjectsRoute = AppLayoutProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => appLayoutRoute,
} as any)

const appProjectsProjectUuidIndexRoute =
  appProjectsProjectUuidIndexImport.update({
    id: '/$projectUuid',
    path: '/$projectUuid',
    getParentRoute: () => AppLayoutProjectsRoute,
  } as any)

const appSettingsIndexRoute = appSettingsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appSettingsLayoutRoute,
} as any)

const appProjectsIndexRoute = appProjectsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutProjectsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app-layout': {
      id: '/_app-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof appLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_auth-layout': {
      id: '/_auth-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_app-layout/projects': {
      id: '/_app-layout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AppLayoutProjectsImport
      parentRoute: typeof appLayoutImport
    }
    '/_app-layout/settings': {
      id: '/_app-layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsLayoutImport
      parentRoute: typeof appLayoutImport
    }
    '/_app-layout/': {
      id: '/_app-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/_app-layout/tracker': {
      id: '/_app-layout/tracker'
      path: '/tracker'
      fullPath: '/tracker'
      preLoaderRoute: typeof appTrackerIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/_auth-layout/sign-in': {
      id: '/_auth-layout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInIndexImport
      parentRoute: typeof authLayoutImport
    }
    '/_auth-layout/sign-up': {
      id: '/_auth-layout/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpIndexImport
      parentRoute: typeof authLayoutImport
    }
    '/_app-layout/projects/': {
      id: '/_app-layout/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof appProjectsIndexImport
      parentRoute: typeof AppLayoutProjectsImport
    }
    '/_app-layout/settings/': {
      id: '/_app-layout/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof appSettingsIndexImport
      parentRoute: typeof appSettingsLayoutImport
    }
    '/_app-layout/projects/$projectUuid': {
      id: '/_app-layout/projects/$projectUuid'
      path: '/$projectUuid'
      fullPath: '/projects/$projectUuid'
      preLoaderRoute: typeof appProjectsProjectUuidIndexImport
      parentRoute: typeof AppLayoutProjectsImport
    }
  }
}

// Create and export the route tree

interface AppLayoutProjectsRouteChildren {
  appProjectsIndexRoute: typeof appProjectsIndexRoute
  appProjectsProjectUuidIndexRoute: typeof appProjectsProjectUuidIndexRoute
}

const AppLayoutProjectsRouteChildren: AppLayoutProjectsRouteChildren = {
  appProjectsIndexRoute: appProjectsIndexRoute,
  appProjectsProjectUuidIndexRoute: appProjectsProjectUuidIndexRoute,
}

const AppLayoutProjectsRouteWithChildren =
  AppLayoutProjectsRoute._addFileChildren(AppLayoutProjectsRouteChildren)

interface appSettingsLayoutRouteChildren {
  appSettingsIndexRoute: typeof appSettingsIndexRoute
}

const appSettingsLayoutRouteChildren: appSettingsLayoutRouteChildren = {
  appSettingsIndexRoute: appSettingsIndexRoute,
}

const appSettingsLayoutRouteWithChildren =
  appSettingsLayoutRoute._addFileChildren(appSettingsLayoutRouteChildren)

interface appLayoutRouteChildren {
  AppLayoutProjectsRoute: typeof AppLayoutProjectsRouteWithChildren
  appSettingsLayoutRoute: typeof appSettingsLayoutRouteWithChildren
  appIndexRoute: typeof appIndexRoute
  appTrackerIndexRoute: typeof appTrackerIndexRoute
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  AppLayoutProjectsRoute: AppLayoutProjectsRouteWithChildren,
  appSettingsLayoutRoute: appSettingsLayoutRouteWithChildren,
  appIndexRoute: appIndexRoute,
  appTrackerIndexRoute: appTrackerIndexRoute,
}

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(
  appLayoutRouteChildren,
)

interface authLayoutRouteChildren {
  authSignInIndexRoute: typeof authSignInIndexRoute
  authSignUpIndexRoute: typeof authSignUpIndexRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authSignInIndexRoute: authSignInIndexRoute,
  authSignUpIndexRoute: authSignUpIndexRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof authLayoutRouteWithChildren
  '/projects': typeof AppLayoutProjectsRouteWithChildren
  '/settings': typeof appSettingsLayoutRouteWithChildren
  '/': typeof appIndexRoute
  '/tracker': typeof appTrackerIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/projects/': typeof appProjectsIndexRoute
  '/settings/': typeof appSettingsIndexRoute
  '/projects/$projectUuid': typeof appProjectsProjectUuidIndexRoute
}

export interface FileRoutesByTo {
  '': typeof authLayoutRouteWithChildren
  '/': typeof appIndexRoute
  '/tracker': typeof appTrackerIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/projects': typeof appProjectsIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/projects/$projectUuid': typeof appProjectsProjectUuidIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app-layout': typeof appLayoutRouteWithChildren
  '/_auth-layout': typeof authLayoutRouteWithChildren
  '/_app-layout/projects': typeof AppLayoutProjectsRouteWithChildren
  '/_app-layout/settings': typeof appSettingsLayoutRouteWithChildren
  '/_app-layout/': typeof appIndexRoute
  '/_app-layout/tracker': typeof appTrackerIndexRoute
  '/_auth-layout/sign-in': typeof authSignInIndexRoute
  '/_auth-layout/sign-up': typeof authSignUpIndexRoute
  '/_app-layout/projects/': typeof appProjectsIndexRoute
  '/_app-layout/settings/': typeof appSettingsIndexRoute
  '/_app-layout/projects/$projectUuid': typeof appProjectsProjectUuidIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/projects'
    | '/settings'
    | '/'
    | '/tracker'
    | '/sign-in'
    | '/sign-up'
    | '/projects/'
    | '/settings/'
    | '/projects/$projectUuid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/tracker'
    | '/sign-in'
    | '/sign-up'
    | '/projects'
    | '/settings'
    | '/projects/$projectUuid'
  id:
    | '__root__'
    | '/_app-layout'
    | '/_auth-layout'
    | '/_app-layout/projects'
    | '/_app-layout/settings'
    | '/_app-layout/'
    | '/_app-layout/tracker'
    | '/_auth-layout/sign-in'
    | '/_auth-layout/sign-up'
    | '/_app-layout/projects/'
    | '/_app-layout/settings/'
    | '/_app-layout/projects/$projectUuid'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
  authLayoutRoute: authLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/_app-layout",
        "/_auth-layout"
      ]
    },
    "/_app-layout": {
      "filePath": "(app)/layout.tsx",
      "children": [
        "/_app-layout/projects",
        "/_app-layout/settings",
        "/_app-layout/",
        "/_app-layout/tracker"
      ]
    },
    "/_auth-layout": {
      "filePath": "(auth)/layout.tsx",
      "children": [
        "/_auth-layout/sign-in",
        "/_auth-layout/sign-up"
      ]
    },
    "/_app-layout/projects": {
      "filePath": "",
      "parent": "/_app-layout",
      "children": [
        "/_app-layout/projects/",
        "/_app-layout/projects/$projectUuid"
      ]
    },
    "/_app-layout/settings": {
      "filePath": "(app)/settings/layout.tsx",
      "parent": "/_app-layout",
      "children": [
        "/_app-layout/settings/"
      ]
    },
    "/_app-layout/": {
      "filePath": "(app)/index.tsx",
      "parent": "/_app-layout"
    },
    "/_app-layout/tracker": {
      "filePath": "(app)/tracker/index.tsx",
      "parent": "/_app-layout"
    },
    "/_auth-layout/sign-in": {
      "filePath": "(auth)/sign-in/index.tsx",
      "parent": "/_auth-layout"
    },
    "/_auth-layout/sign-up": {
      "filePath": "(auth)/sign-up/index.tsx",
      "parent": "/_auth-layout"
    },
    "/_app-layout/projects/": {
      "filePath": "(app)/projects/index.tsx",
      "parent": "/_app-layout/projects"
    },
    "/_app-layout/settings/": {
      "filePath": "(app)/settings/index.tsx",
      "parent": "/_app-layout/settings"
    },
    "/_app-layout/projects/$projectUuid": {
      "filePath": "(app)/projects/$projectUuid/index.tsx",
      "parent": "/_app-layout/projects"
    }
  }
}
ROUTE_MANIFEST_END */
