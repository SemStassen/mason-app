{
  "openapi": "3.1.0",
  "info": {
    "title": "Api",
    "version": "0.0.1"
  },
  "paths": {
    "/auth/email-otp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth.SendEmailVerificationOTP",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$id": "/schemas/%7B%7D",
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpApiDecodeError"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "type"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "a string matching the pattern ^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,}$",
                    "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,}$"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "sign-in",
                      "email-verification",
                      "forget-password"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth.SignInWithEmailOTP",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$id": "/schemas/%7B%7D",
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpApiDecodeError"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "a string matching the pattern ^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,}$",
                    "pattern": "^[^@\\s]+@[^@\\s]+\\.[^@\\s]{2,}$"
                  },
                  "otp": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/auth/github": {
      "post": {
        "tags": [
          "Auth"
        ],
        "operationId": "Auth.SignInWithGithub",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$id": "/schemas/%7B%7D",
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpApiDecodeError"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/workspace/workspace": {
      "post": {
        "tags": [
          "Workspace"
        ],
        "operationId": "Workspace.CreateWorkspace",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$id": "/schemas/%7B%7D",
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The request did not match the expected schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpApiDecodeError"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "slug"
                ],
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/NonEmptyString",
                    "description": "a string at most 100 character(s) long",
                    "title": "maxLength(100)",
                    "maxLength": 100
                  },
                  "slug": {
                    "$ref": "#/components/schemas/NonEmptyString",
                    "description": "a string at most 100 character(s) long",
                    "title": "maxLength(100)",
                    "maxLength": 100
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HttpApiDecodeError": {
        "type": "object",
        "required": [
          "issues",
          "message",
          "_tag"
        ],
        "properties": {
          "issues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Issue"
            }
          },
          "message": {
            "type": "string"
          },
          "_tag": {
            "type": "string",
            "enum": [
              "HttpApiDecodeError"
            ]
          }
        },
        "additionalProperties": false,
        "description": "The request did not match the expected schema"
      },
      "Issue": {
        "type": "object",
        "required": [
          "_tag",
          "path",
          "message"
        ],
        "properties": {
          "_tag": {
            "type": "string",
            "enum": [
              "Pointer",
              "Unexpected",
              "Missing",
              "Composite",
              "Refinement",
              "Transformation",
              "Type",
              "Forbidden"
            ],
            "description": "The tag identifying the type of parse issue"
          },
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyKey"
            },
            "description": "The path to the property where the issue occurred"
          },
          "message": {
            "type": "string",
            "description": "A descriptive message explaining the issue"
          }
        },
        "additionalProperties": false,
        "description": "Represents an error encountered while parsing a value to match the schema"
      },
      "PropertyKey": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "object",
            "required": [
              "_tag",
              "key"
            ],
            "properties": {
              "_tag": {
                "type": "string",
                "enum": [
                  "symbol"
                ]
              },
              "key": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "description": "an object to be decoded into a globally shared symbol"
          }
        ]
      },
      "InternalServerError": {
        "type": "object",
        "required": [
          "code",
          "status",
          "_tag"
        ],
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "status": {
            "type": "number",
            "enum": [
              500
            ]
          },
          "message": {
            "type": "string"
          },
          "_tag": {
            "type": "string",
            "enum": [
              "InternalServerError"
            ]
          }
        },
        "additionalProperties": false
      },
      "NonEmptyString": {
        "type": "string",
        "description": "a non empty string",
        "title": "nonEmptyString",
        "minLength": 1
      }
    },
    "securitySchemes": {}
  },
  "security": [],
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Workspace"
    }
  ]
}