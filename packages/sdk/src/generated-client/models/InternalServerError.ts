/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InternalServerError
 */
export interface InternalServerError {
    /**
     * 
     * @type {string}
     * @memberof InternalServerError
     */
    code: InternalServerErrorCodeEnum;
    /**
     * 
     * @type {number}
     * @memberof InternalServerError
     */
    status: InternalServerErrorStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InternalServerError
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof InternalServerError
     */
    tag: InternalServerErrorTagEnum;
}


/**
 * @export
 */
export const InternalServerErrorCodeEnum = {
    InternalServerError: 'INTERNAL_SERVER_ERROR'
} as const;
export type InternalServerErrorCodeEnum = typeof InternalServerErrorCodeEnum[keyof typeof InternalServerErrorCodeEnum];

/**
 * @export
 */
export const InternalServerErrorStatusEnum = {
    NUMBER_500: 500
} as const;
export type InternalServerErrorStatusEnum = typeof InternalServerErrorStatusEnum[keyof typeof InternalServerErrorStatusEnum];

/**
 * @export
 */
export const InternalServerErrorTagEnum = {
    InternalServerError: 'InternalServerError'
} as const;
export type InternalServerErrorTagEnum = typeof InternalServerErrorTagEnum[keyof typeof InternalServerErrorTagEnum];


/**
 * Check if a given object implements the InternalServerError interface.
 */
export function instanceOfInternalServerError(value: object): value is InternalServerError {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    return true;
}

export function InternalServerErrorFromJSON(json: any): InternalServerError {
    return InternalServerErrorFromJSONTyped(json, false);
}

export function InternalServerErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalServerError {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'status': json['status'],
        'message': json['message'] == null ? undefined : json['message'],
        'tag': json['_tag'],
    };
}

export function InternalServerErrorToJSON(json: any): InternalServerError {
    return InternalServerErrorToJSONTyped(json, false);
}

export function InternalServerErrorToJSONTyped(value?: InternalServerError | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'status': value['status'],
        'message': value['message'],
        '_tag': value['tag'],
    };
}

