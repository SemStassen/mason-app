/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * an object to be decoded into a globally shared symbol
 * @export
 * @interface PropertyKeyAnyOf
 */
export interface PropertyKeyAnyOf {
    /**
     * 
     * @type {string}
     * @memberof PropertyKeyAnyOf
     */
    tag: PropertyKeyAnyOfTagEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyKeyAnyOf
     */
    key: string;
}


/**
 * @export
 */
export const PropertyKeyAnyOfTagEnum = {
    Symbol: 'symbol'
} as const;
export type PropertyKeyAnyOfTagEnum = typeof PropertyKeyAnyOfTagEnum[keyof typeof PropertyKeyAnyOfTagEnum];


/**
 * Check if a given object implements the PropertyKeyAnyOf interface.
 */
export function instanceOfPropertyKeyAnyOf(value: object): value is PropertyKeyAnyOf {
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    return true;
}

export function PropertyKeyAnyOfFromJSON(json: any): PropertyKeyAnyOf {
    return PropertyKeyAnyOfFromJSONTyped(json, false);
}

export function PropertyKeyAnyOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyKeyAnyOf {
    if (json == null) {
        return json;
    }
    return {
        
        'tag': json['_tag'],
        'key': json['key'],
    };
}

export function PropertyKeyAnyOfToJSON(json: any): PropertyKeyAnyOf {
    return PropertyKeyAnyOfToJSONTyped(json, false);
}

export function PropertyKeyAnyOfToJSONTyped(value?: PropertyKeyAnyOf | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        '_tag': value['tag'],
        'key': value['key'],
    };
}

